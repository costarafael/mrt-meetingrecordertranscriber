#!/bin/bash

# Script para atualizar o Production App com as corre√ß√µes de permiss√µes
echo "üîÑ Atualizando MRTThree_Production.app com corre√ß√µes de permiss√µes..."
echo ""

# Verificar se existe backup
if [ ! -d "MRTThree_Production.app.backup" ]; then
    echo "üíæ Criando backup do Production App..."
    cp -r MRTThree_Production.app MRTThree_Production.app.backup
    echo "‚úÖ Backup criado: MRTThree_Production.app.backup"
else
    echo "‚úÖ Backup j√° existe: MRTThree_Production.app.backup"
fi

# Verificar se temos o binary atualizado
RELEASE_BINARY=".build/arm64-apple-macosx/release/MacOSApp"
if [ ! -f "$RELEASE_BINARY" ]; then
    echo "üîß Compilando vers√£o release com corre√ß√µes..."
    swift build -c release
    
    if [ $? -ne 0 ]; then
        echo "‚ùå Falha no build. Verifique os erros."
        exit 1
    fi
fi

# Verificar datas para confirmar que temos a vers√£o mais recente
echo "üìÖ Verificando datas dos arquivos:"
echo "   Production App: $(stat -f "%Sm" -t "%Y-%m-%d %H:%M" MRTThree_Production.app/Contents/MacOS/MRTThree)"
echo "   Release Binary: $(stat -f "%Sm" -t "%Y-%m-%d %H:%M" $RELEASE_BINARY)"

# Atualizar o execut√°vel principal
echo ""
echo "üîÑ Atualizando execut√°vel principal..."
cp "$RELEASE_BINARY" MRTThree_Production.app/Contents/MacOS/MRTThree
chmod +x MRTThree_Production.app/Contents/MacOS/MRTThree
echo "‚úÖ Execut√°vel atualizado com corre√ß√µes de permiss√µes"

# Atualizar Info.plist com descri√ß√µes de permiss√£o melhoradas
if [ -f "Info.plist" ]; then
    echo "üîÑ Atualizando Info.plist..."
    cp Info.plist MRTThree_Production.app/Contents/Info.plist
    echo "‚úÖ Info.plist atualizado com descri√ß√µes de permiss√£o melhoradas"
else
    echo "‚ö†Ô∏è  Info.plist n√£o encontrado - mantendo o atual"
fi

# Verificar Helper Tool
HELPER_IN_APP="MRTThree_Production.app/Contents/Library/LaunchServices/AudioCaptureHelper"
HELPER_SOURCE="HelperTools/AudioCaptureHelper/AudioCaptureHelper"

if [ -f "$HELPER_SOURCE" ]; then
    echo "üîÑ Atualizando Helper Tool..."
    cp "$HELPER_SOURCE" "$HELPER_IN_APP"
    chmod +x "$HELPER_IN_APP"
    echo "‚úÖ Helper Tool atualizada"
elif [ ! -f "$HELPER_IN_APP" ]; then
    echo "üîß Compilando Helper Tool..."
    cd HelperTools/AudioCaptureHelper
    clang -framework Foundation -framework CoreAudio -framework AudioToolbox -framework Security -o AudioCaptureHelper main.m AudioCaptureService.m
    
    if [ $? -eq 0 ]; then
        cd ../..
        mkdir -p MRTThree_Production.app/Contents/Library/LaunchServices
        cp "$HELPER_SOURCE" "$HELPER_IN_APP"
        chmod +x "$HELPER_IN_APP"
        echo "‚úÖ Helper Tool compilada e instalada"
    else
        echo "‚ùå Falha na compila√ß√£o da Helper Tool"
        cd ../..
    fi
else
    echo "‚úÖ Helper Tool j√° presente"
fi

echo ""
echo "üéØ Production App atualizado com sucesso!"
echo ""
echo "üìã Resumo das corre√ß√µes aplicadas:"
echo "   ‚úÖ Corre√ß√£o da condi√ß√£o de corrida em permiss√µes"
echo "   ‚úÖ Verifica√ß√£o de status de permiss√µes melhorada"
echo "   ‚úÖ Aguarda resposta do usu√°rio antes de mostrar erros"
echo "   ‚úÖ Descri√ß√µes de permiss√£o em portugu√™s"
echo ""
echo "üöÄ Para testar, execute:"
echo "   ./run_production_app.sh"
echo ""
echo "üí° O app agora deve solicitar permiss√µes corretamente sem mostrar"
echo "   erros enquanto o usu√°rio ainda est√° respondendo aos di√°logos!"
#!/bin/bash

# Script simplificado para configurar XPC real

echo "üöÄ Configurando Core Audio TAP XPC Real..."
echo ""

# 1. Backup e restaurar arquivos limpos primeiro
echo "üîÑ Restaurando arquivos limpos..."

if [ -f "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift.backup" ]; then
    cp "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift.backup" "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift"
fi

if [ -f "Sources/Services/Audio/XPC/HelperInstallationManager.swift.backup" ]; then
    cp "Sources/Services/Audio/XPC/HelperInstallationManager.swift.backup" "Sources/Services/Audio/XPC/HelperInstallationManager.swift"
fi

# 2. Remover simula√ß√£o do CoreAudioTapXPCService
echo "üîß Modificando CoreAudioTapXPCService para XPC real..."

cat > /tmp/fix_xpc_service.swift << 'EOF'
    func requestSystemPermissions() async -> Bool {
        logger.info("üîê Solicitando permiss√µes para Core Audio TAP XPC real", category: .audio)
        
        // Verificar se Helper Tool pode ser instalada/est√° dispon√≠vel
        let status = await helperManager.getInstallationStatus()
        
        if status.isInstalled {
            logger.info("‚úÖ Helper Tool j√° instalada, permiss√µes OK", category: .audio)
            return true
        }
        
        if status.canInstall {
            logger.info("Helper Tool pode ser instalada, permiss√µes dispon√≠veis", category: .audio)
            return true
        }
        
        logger.warning("Helper Tool n√£o pode ser instalada", category: .audio)
        return false
    }
    
    func isSystemAudioAvailable() async -> Bool {
        // Verificar se Helper Tool est√° dispon√≠vel ou pode ser instalada
        let status = await helperManager.getInstallationStatus()
        let available = status.isInstalled || status.canInstall
        logger.debug("Core Audio TAP XPC real: √°udio do sistema dispon√≠vel = \(available)", category: .audio)
        return available
    }
EOF

# Substituir fun√ß√µes espec√≠ficas
sed -i.bak '
/func requestSystemPermissions() async -> Bool {/,/^    }$/{
    /Para Core Audio TAP via XPC, sempre retornar true/,/return true/ {
        r /tmp/fix_xpc_service.swift
        d
    }
    /‚úÖ Core Audio TAP XPC: permiss√µes sempre dispon√≠veis/d
    /return true/d
}
/func isSystemAudioAvailable() async -> Bool {/,/^    }$/{
    /Core Audio TAP via XPC est√° sempre "dispon√≠vel"/,/return true/ {
        d
    }
}
' "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift"

echo "‚úÖ CoreAudioTapXPCService modificado"

# 3. Remover fallbacks do HelperInstallationManager
echo "üîß Modificando HelperInstallationManager para XPC real..."

sed -i.bak2 '
/üîß Usando modo simulado em produ√ß√£o devido √† falta de assinatura/,/return true/ {
    s/return true/throw XPCError.installationFailed("Aplica√ß√£o n√£o assinada adequadamente")/
}
/üîß Usando modo simulado em produ√ß√£o devido √† Helper Tool n√£o assinada/,/return true/ {
    s/return true/throw XPCError.installationFailed("Helper Tool n√£o assinada adequadamente")/
}
/üîß Fallback: usando modo simulado devido √† falha do SMJobBless/,/continuation.resume(returning: true)/ {
    s/continuation.resume(returning: true)/continuation.resume(returning: false)/
}
/üîß Fallback: usando modo simulado devido ao erro/,/continuation.resume(returning: true)/ {
    s/continuation.resume(returning: true)/continuation.resume(returning: false)/
}
' "Sources/Services/Audio/XPC/HelperInstallationManager.swift"

echo "‚úÖ HelperInstallationManager modificado"

# 4. Recompilar
echo "üîß Recompilando aplica√ß√£o..."
./build_production.sh

if [ $? -ne 0 ]; then
    echo "‚ùå Falha na compila√ß√£o"
    exit 1
fi

echo "‚úÖ Aplica√ß√£o recompilada"

# 5. Assinar com ad-hoc
echo "‚úçÔ∏è  Assinando com assinatura ad-hoc..."

APP_NAME="MRTThree_Production.app"

# Assinar Helper Tool
codesign --force --sign "-" --options runtime "$APP_NAME/Contents/Library/LaunchServices/AudioCaptureHelper"
echo "‚úÖ Helper Tool assinada"

# Assinar aplica√ß√£o
codesign --force --sign "-" --options runtime --deep "$APP_NAME"
echo "‚úÖ Aplica√ß√£o assinada"

# 6. Verificar
echo "üîç Verificando assinaturas..."
codesign -v "$APP_NAME/Contents/Library/LaunchServices/AudioCaptureHelper" 2>&1 | head -1
codesign -v "$APP_NAME" 2>&1 | head -1

# Limpar tempor√°rios
rm -f /tmp/fix_xpc_service.swift

echo ""
echo "üéâ CONFIGURA√á√ÉO COMPLETA!"
echo ""
echo "‚úÖ Core Audio TAP XPC Real configurado"
echo "‚úÖ Modo simula√ß√£o removido"
echo "‚úÖ Aplica√ß√£o assinada (ad-hoc)"
echo ""
echo "üöÄ TESTE AGORA:"
echo "   open MRTThree_Production.app"
echo ""
echo "‚ö†Ô∏è  IMPORTANTE:"
echo "   ‚Ä¢ Marque 'Gravar com Core Audio Tap'"
echo "   ‚Ä¢ Se pedir senha de admin, forne√ßa"
echo "   ‚Ä¢ XPC real pode ter limita√ß√µes com assinatura ad-hoc"
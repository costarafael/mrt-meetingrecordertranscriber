#!/bin/bash

# Script para configurar XPC real usando assinatura ad-hoc
# Funciona sem certificado de desenvolvedor para teste local

echo "üöÄ Configurando Core Audio TAP XPC Real (Assinatura Ad-Hoc)..."
echo ""

echo "‚ö†Ô∏è  IMPORTANTE: Assinatura ad-hoc permite teste local,"
echo "   mas pode ter limita√ß√µes com XPC privilegiado."
echo ""
read -p "   Continuar? (y/n): " CONTINUE

if [ "$CONTINUE" != "y" ] && [ "$CONTINUE" != "Y" ]; then
    echo "‚ùå Cancelado pelo usu√°rio"
    exit 1
fi

# 1. Remover simula√ß√£o do c√≥digo
echo "üîß Removendo modo simula√ß√£o do CoreAudioTapXPCService..."

# Backup
cp "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift" "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift.backup"

# Editar o arquivo para remover simula√ß√£o
cat > /tmp/xpc_real_patch.sed << 'EOF'
/func requestSystemPermissions.*async -> Bool {/,/^    }$/{
    /Para Core Audio TAP via XPC, sempre retornar true/,/return true/{
        c\
        // Verificar se Helper Tool pode ser instalada/est√° dispon√≠vel\
        let status = await helperManager.getInstallationStatus()\
        \
        if status.isInstalled {\
            logger.info("‚úÖ Helper Tool j√° instalada, permiss√µes OK", category: .audio)\
            return true\
        }\
        \
        if status.canInstall {\
            logger.info("Helper Tool pode ser instalada, permiss√µes dispon√≠veis", category: .audio)\
            return true\
        }\
        \
        logger.warning("Helper Tool n√£o pode ser instalada", category: .audio)\
        return false
    }
}
/func isSystemAudioAvailable.*async -> Bool {/,/^    }$/{
    /Core Audio TAP via XPC est√° sempre "dispon√≠vel"/,/return true/{
        c\
        // Verificar se Helper Tool est√° dispon√≠vel ou pode ser instalada\
        let status = await helperManager.getInstallationStatus()\
        let available = status.isInstalled || status.canInstall\
        logger.debug("Core Audio TAP XPC real: √°udio do sistema dispon√≠vel = \\(available)", category: .audio)\
        return available
    }
}
EOF

sed -f /tmp/xpc_real_patch.sed "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift" > /tmp/xpc_service_fixed.swift
mv /tmp/xpc_service_fixed.swift "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift"

echo "‚úÖ Modo simula√ß√£o removido"

# 2. Modificar HelperInstallationManager para n√£o usar fallback
echo "üîß Configurando HelperInstallationManager para XPC real..."

cp "Sources/Services/Audio/XPC/HelperInstallationManager.swift" "Sources/Services/Audio/XPC/HelperInstallationManager.swift.backup"

# Remover fallbacks para simula√ß√£o
sed -i.bak '
/üîß Usando modo simulado em produ√ß√£o/,/return true/{
    s/return true/throw XPCError.installationFailed("Aplica√ß√£o ou Helper Tool n√£o assinada adequadamente")/
}
/üîß Fallback: usando modo simulado/,/continuation.resume(returning: true)/{
    s/continuation.resume(returning: true)/continuation.resume(returning: false)/
}
' "Sources/Services/Audio/XPC/HelperInstallationManager.swift"

echo "‚úÖ Fallback para simula√ß√£o removido"

# 3. Recompilar aplica√ß√£o
echo "üîß Recompilando aplica√ß√£o..."
./build_production.sh

if [ $? -ne 0 ]; then
    echo "‚ùå Falha na compila√ß√£o. Restaurando backups..."
    mv "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift.backup" "Sources/Services/Audio/XPC/CoreAudioTapXPCService.swift"
    mv "Sources/Services/Audio/XPC/HelperInstallationManager.swift.backup" "Sources/Services/Audio/XPC/HelperInstallationManager.swift"
    exit 1
fi

echo "‚úÖ Aplica√ß√£o recompilada"

# 4. Assinar com assinatura ad-hoc
echo "‚úçÔ∏è  Aplicando assinatura ad-hoc..."

APP_NAME="MRTThree_Production.app"

# Assinar Helper Tool
echo "   Assinando Helper Tool..."
codesign --force --sign "-" \
    --options runtime \
    "$APP_NAME/Contents/Library/LaunchServices/AudioCaptureHelper"

if [ $? -eq 0 ]; then
    echo "   ‚úÖ Helper Tool assinada (ad-hoc)"
else
    echo "   ‚ùå Falha ao assinar Helper Tool"
    exit 1
fi

# Assinar aplica√ß√£o principal
echo "   Assinando aplica√ß√£o principal..."
codesign --force --sign "-" \
    --options runtime \
    --deep \
    "$APP_NAME"

if [ $? -eq 0 ]; then
    echo "   ‚úÖ Aplica√ß√£o assinada (ad-hoc)"
else
    echo "   ‚ùå Falha ao assinar aplica√ß√£o"
    exit 1
fi

# 5. Verificar assinaturas
echo "üîç Verificando assinaturas..."
echo "   Helper Tool:"
codesign -d -v "$APP_NAME/Contents/Library/LaunchServices/AudioCaptureHelper" 2>&1 | head -3

echo "   Aplica√ß√£o:"
codesign -d -v "$APP_NAME" 2>&1 | head -3

# 6. Criar entitlements file para Helper Tool (necess√°rio para XPC)
echo "üìã Criando entitlements para Helper Tool..."

cat > /tmp/helper_entitlements.plist << 'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>com.apple.security.app-sandbox</key>
    <false/>
    <key>com.apple.private.tcc.allow</key>
    <array>
        <string>kTCCServiceMicrophone</string>
        <string>kTCCServiceScreenCapture</string>
    </array>
</dict>
</plist>
EOF

# Re-assinar Helper Tool com entitlements
echo "   Re-assinando Helper Tool com entitlements..."
codesign --force --sign "-" \
    --entitlements /tmp/helper_entitlements.plist \
    "$APP_NAME/Contents/Library/LaunchServices/AudioCaptureHelper"

echo "‚úÖ Helper Tool assinada com entitlements"

echo ""
echo "üéâ CONFIGURA√á√ÉO COMPLETA!"
echo ""
echo "‚úÖ Core Audio TAP XPC Real configurado (assinatura ad-hoc)"
echo "‚úÖ Modo simula√ß√£o removido"
echo "‚úÖ Aplica√ß√£o assinada para teste local"
echo ""
echo "‚ö†Ô∏è  LIMITA√á√ïES DA ASSINATURA AD-HOC:"
echo "   ‚Ä¢ XPC privilegiado pode ser restrito"
echo "   ‚Ä¢ Pode necessitar permiss√µes de administrador"
echo "   ‚Ä¢ Funciona para teste local, mas n√£o para distribui√ß√£o"
echo ""
echo "üöÄ TESTE AGORA:"
echo "   1. Execute: open MRTThree_Production.app"
echo "   2. Marque 'Gravar com Core Audio Tap'"
echo "   3. Inicie grava√ß√£o"
echo "   4. Se pedir senha de administrador, forne√ßa"
echo ""
echo "üìù Logs esperados (sucesso):"
echo "   - 'Helper Tool instalada com sucesso'"
echo "   - 'Conex√£o XPC criada e ativada'"
echo "   - 'Core Audio Tap (XPC) iniciado com sucesso'"
echo ""
echo "üìù Se XPC falhar:"
echo "   - Logs mostrar√£o falhas espec√≠ficas de instala√ß√£o"
echo "   - Isso √© normal com assinatura ad-hoc"
echo "   - Configure certificado de desenvolvedor para XPC completo"

# Limpar arquivos tempor√°rios
rm -f /tmp/xpc_real_patch.sed /tmp/helper_entitlements.plist